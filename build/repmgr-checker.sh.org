#!/bin/bash -e


CHECK_FREQUENCY=${CHECK_FREQUENCY:-10}


function get_pg_primary_count () {

	PG_NODE_COUNT=$(docker exec  $POSTGRES_CONTAINER_ID /opt/bitnami/scripts/postgresql-repmgr/entrypoint.sh repmgr -f /opt/bitnami/repmgr/conf/repmgr.conf  cluster show | grep default | grep "primary" | wc -l)
	echo $PG_NODE_COUNT
	# unset $PG_NODE_COUNT
}

function get_pg_to_fix (){

	PG_TO_FIX=$(docker exec $POSTGRES_CONTAINER_ID /opt/bitnami/scripts/postgresql-repmgr/entrypoint.sh repmgr -f /opt/bitnami/repmgr/conf/repmgr.conf  cluster show | grep \*\ running | grep -v running\ as\ primary | awk -F '|' '{print $2}')
	echo $PG_TO_FIX
}		


while :

do


ITERATION_COUNT=0

  function wait_and_check () {

	while [ ${ITERATION_COUNT} -lt 5 ]; 
	do

		#PG_NODE_COUNT=$(cat /usr/local/bin/cluster_show_dummy)

		if [ $(get_pg_primary_count) -gt 1 ]
			then
  				ITERATION_COUNT=$((ITERATION_COUNT + 1))
				echo "Iteration - $ITERATION_COUNT"
				echo "Node count - $(get_pg_primary_count)"
  				sleep 3

			else
			break
			fi
	done

  }
# Get the local pg ID

POSTGRES_CONTAINER_ID=$(docker ps | grep "database_pg-" | awk '{print $1}')

# Monitor if postgres primary nodes are greater than 1

if [ $(get_pg_primary_count) -gt 1 ]
then
    
   # Loggin if true 

    echo "SAFEWALK REPMGR MONITOR ****** MORE THAN 1 DATABASE NODE IN PRIMARY MODE ******"
   # Print the actual state of the cluster

    docker exec  $POSTGRES_CONTAINER_ID /opt/bitnami/scripts/postgresql-repmgr/entrypoint.sh repmgr -f /opt/bitnami/repmgr/conf/repmgr.conf  cluster show
    
   # Wait 10 seconds for repmgr cluseter timeouts
    wait_and_check 

	if [ $(get_pg_primary_count) -gt 1 ] 
	then
   		# Print the actual state of the cluster
		 docker exec  $POSTGRES_CONTAINER_ID /opt/bitnami/scripts/postgresql-repmgr/entrypoint.sh repmgr -f /opt/bitnami/repmgr/conf/repmgr.conf  cluster show
		 echo "*** REPMGR cluster show before service update ****"
		
		# Fixing the cluster
		 docker service update database_$(get_pg_to_fix) --force
		
		# Waiting 30 seconds after the restart
		 sleep 30
		 
		 echo "*** REPMGR cluster show after service update ****"
		
   		# Print the state of the cluster after the restart
		 docker exec  $POSTGRES_CONTAINER_ID /opt/bitnami/scripts/postgresql-repmgr/entrypoint.sh repmgr -f /opt/bitnami/repmgr/conf/repmgr.conf  cluster show

	else
	
  		echo "INFO: The number of primary repmgr nodes are ok - do nothing"
	fi

else
	echo "INFO: The number of PG in primary is: $(get_pg_primary_count)  - do nothing"
  docker exec  $POSTGRES_CONTAINER_ID /opt/bitnami/scripts/postgresql-repmgr/entrypoint.sh repmgr -f /opt/bitnami/repmgr/conf/repmgr.conf  cluster show
fi

sleep $CHECK_FREQUENCY
done
